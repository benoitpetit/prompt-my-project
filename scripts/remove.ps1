# Configuration
$binaryName = "pmp"
$installDir = "$env:LOCALAPPDATA\Programs\pmp"

# Function to display colored messages
function Write-ColoredOutput {
    param (
        [Parameter(Mandatory=$true)]
        [string]$Message,
        
        [Parameter(Mandatory=$false)]
        [string]$Type = "Info"
    )
    
    switch ($Type) {
        "Info" {
            Write-Host "[INFO] " -ForegroundColor Cyan -NoNewline
            Write-Host "$Message"
        }
        "Success" {
            Write-Host "[SUCCESS] " -ForegroundColor Green -NoNewline
            Write-Host "$Message"
        }
        "Warning" {
            Write-Host "[WARNING] " -ForegroundColor Yellow -NoNewline
            Write-Host "$Message"
        }
        "Error" {
            Write-Host "[ERROR] " -ForegroundColor Red -NoNewline
            Write-Host "$Message"
        }
    }
}

# Check if installation exists
Write-ColoredOutput "Searching for $binaryName installation..." -Type "Info"
if (-not (Test-Path "$installDir\$binaryName.exe")) {
    Write-ColoredOutput "$binaryName is not installed in $installDir." -Type "Error"
    exit 1
}

# Confirm uninstallation
Write-Host "You are about to uninstall $binaryName from your system." -ForegroundColor Yellow
$confirm = Read-Host "Are you sure you want to continue? (y/N)"
if ($confirm -notmatch '^[yY]([eE][sS])?$') {
    Write-ColoredOutput "Uninstallation cancelled." -Type "Info"
    exit 0
}

# Remove installation
Write-ColoredOutput "Removing installation..." -Type "Info"

try {
    # Remove from PATH
    $userPath = [Environment]::GetEnvironmentVariable("Path", "User")
    if ($userPath -like "*$installDir*") {
        Write-ColoredOutput "Removing installation directory from user PATH..." -Type "Info"
        $newPath = ($userPath -split ';' | Where-Object { $_ -ne $installDir }) -join ';'
        [Environment]::SetEnvironmentVariable("Path", $newPath, "User")
        Write-ColoredOutput "Path updated." -Type "Success"
    }

    # Remove installation directory
    if (Test-Path $installDir) {
        Write-ColoredOutput "Removing installation directory..." -Type "Info"
        Remove-Item -Path $installDir -Recurse -Force
        if (-not (Test-Path $installDir)) {
            Write-ColoredOutput "Installation directory successfully removed." -Type "Success"
        } else {
            Write-ColoredOutput "Some files could not be removed." -Type "Warning"
        }
    }

    Write-ColoredOutput "Uninstallation complete. $binaryName has been removed from your system." -Type "Success"
    
    # Inform user about data removal
    Write-ColoredOutput "Note: Output files generated by $binaryName in './prompts' folders in your projects have not been removed." -Type "Info"
} catch {
    Write-ColoredOutput "An error occurred during uninstallation: $_" -Type "Error"
    exit 1
}

Write-Host "`nâœ… Uninstallation complete." -ForegroundColor Green
